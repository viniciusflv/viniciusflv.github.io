---
import { Svg } from '@svjson/react';

import { meRicknmorty } from '@/assets/svg';
import Card from '@/components/Card.astro';
import Page from '@/new/layout/Page.astro';
import { getLanguageFromURL } from '@/util';

const { category } = Astro.props.frontmatter;
const lang = getLanguageFromURL(Astro.url.pathname);
const posts = await Astro.glob('@/pages/**/posts/**/*.mdx');
const articles = posts
  .filter(({ url }) => (url ?? '').startsWith(`/${lang}`))
  .filter(({ frontmatter }) => frontmatter.categories)
  .filter(({ frontmatter }) =>
    category ? frontmatter.categories === category : frontmatter.categories,
  )
  .reduce<Record<string, any[]>>((acc, article) => {
    const key = article.frontmatter.categories;
    const category = acc[key] || [];
    return { ...acc, [key]: [...category, article] };
  }, {});
---

<Page
  {...Astro.props}
  frontmatter={{
    ...Astro.props?.frontmatter,
    description: `${Astro.props?.frontmatter.description}: ${Object.keys(
      articles,
    )
      .map((key) => key)
      .join(', ')}`,
  }}
>
  <picture slot="image" class="hero__figure">
    <Svg alt="Me as a Rick and Morty Character" src={meRicknmorty as any} />
  </picture>
  <Fragment slot="section">
    <main class="section__main">
      {
        Object.keys(articles).map((key) => {
          return (
            <div class="flex flex-col gap-8">
              <h3>{key}</h3>
              <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-8">
                {articles[key].map(({ frontmatter, ...article }) => (
                  <Card lang={lang} {...article} {...frontmatter} />
                ))}
              </div>
            </div>
          );
        })
      }
    </main>
  </Fragment>
</Page>

<style is:global>
  .enabled {
    .hero__buttons {
      @apply flex
      flex-wrap
      gap-4
      w-full;
    }

    .hero__figure {
      @apply flex
      justify-end
      overflow-hidden
      -mb-48
      dark:text-dark-darkest
      text-dark-comment;
      .lenses {
        @apply opacity-90
        dark:opacity-20
        transition-opacity
        duration-500;
      }
    }

    .section__main {
      @apply flex flex-col gap-16 w-full;
    }
  }
</style>
