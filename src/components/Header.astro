---
import {
  github,
  home,
  linkedin,
  person,
  twitterLogo,
  write,
} from "@/assets/svg";
import MenuItem from "@/components/MenuItem.astro";
import ToggleTheme from "@/components/ToggleTheme.astro";
import ToggleLang from "@/components/ToggleLang.astro";
import type { TranslationsOptions } from "@/consts";

const { getRelativeLocaleUrl, getTranslations } = Astro.props;

export type Props = {
  lang: string;
  knownLanguages: string[];
  getRelativeLocaleUrl: (href: string) => string;
  getTranslations: (keys: TranslationsOptions) => string;
};
---

<script>
  function registerEvent() {
    const toggleMenuBtn = document.getElementById("toggle-menu");

    function toggleMenu() {
      toggleMenuBtn?.setAttribute(
        "aria-pressed",
        toggleMenuBtn?.getAttribute("aria-pressed") === "false"
          ? "true"
          : "false"
      );
    }

    toggleMenuBtn?.addEventListener("click", toggleMenu);
  }

  registerEvent();
  document.addEventListener("astro:after-swap", registerEvent);
</script>

<header>
  <nav>
    <MenuItem
      as="button"
      label="Hamburger Menu"
      aria-pressed="false"
      id="toggle-menu"
      class="toggle__menu"
    >
      <div class="toggle__menu__icon">
        <hr class="trigger-line" />
        <hr class="trigger-line" />
        <hr class="trigger-line" />
      </div>
    </MenuItem>
    <div class="header__nav__menu">
      <MenuItem
        label={getTranslations("HEADER_MENU_ITEM_HOME")}
        icon={home}
        href={getRelativeLocaleUrl("/")}
        isCurrentColor
      />
      <MenuItem
        label={getTranslations("HEADER_MENU_ITEM_POSTS")}
        icon={write}
        href={getRelativeLocaleUrl("/posts")}
        isCurrentColor
      />
      <MenuItem
        label={getTranslations("HEADER_MENU_ITEM_ABOUT")}
        icon={person}
        href={getRelativeLocaleUrl("/about")}
        isCurrentColor
      />
      <ToggleLang {...Astro.props} />
      <ToggleTheme {...Astro.props} />
      <MenuItem
        label="Github"
        icon={github}
        target="_blank"
        href="https://github.com/viniciusflv/"
        isCurrentColor
      />
      <MenuItem
        label="Linkedin"
        icon={linkedin}
        target="_blank"
        href="https://www.linkedin.com/in/viniciusflv/"
        isCurrentColor
      />
      <MenuItem
        label="Twitter"
        icon={twitterLogo}
        target="_blank"
        href="https://twitter.com/viniciusflv1/"
        isCurrentColor
      />
    </div>
  </nav>
</header>

<style>
  header {
    @apply flex
    justify-end
    sm:justify-center
    w-full;

    nav {
      @apply fixed
      bottom-4
      origin-top
      z-10
      sm:p-1
      flex
      items-center
      flex-col-reverse
      sm:flex-row
      shadow-2xl
      rounded-lg
      border
      border-gray-300
      dark:border-dracula-currentLine
      bg-white
      dark:bg-dracula-background;

      @keyframes popup {
        0% {
          @apply -bottom-full;
        }

        50% {
          @apply bottom-10;
        }
      }

      animation: popup 500ms 1;

      .header__nav__menu {
        @apply flex
        flex-col
        sm:flex-row;

        @apply origin-bottom
        transition-transform
        duration-75;
      }

      .toggle__menu {
        @apply sm:hidden;

        .toggle__menu__icon {
          @apply relative
          w-4/5
          h-3/5
          flex
          flex-col
          justify-between;
          .trigger-line {
            @apply h-1/5
            w-full
            rounded
            bg-current
            transition-transform
            duration-300
            border-none;
          }
        }

        &[aria-pressed="false"] {
          :global(:is(.dark .menu_action .menu__item)) {
            @apply bg-dracula-green
            glow-dracula-green
            text-dracula-darkest;
          }

          :global(:is(.menu_action .menu__item)) {
            @apply bg-dracula-comment
            glow-dracula-comment
            text-white;
          }

          & + .header__nav__menu {
            @apply scale-y-0
            h-0
            sm:scale-100
            sm:h-auto;
          }
        }

        &[aria-pressed="true"] {
          :global(:is(.dark .menu_action .menu__item)) {
            @apply text-dracula-green;
          }

          @apply text-dracula-comment;

          & + .header__nav__menu {
            @apply scale-100;
          }

          .trigger-line {
            @apply absolute
            top-3;

            &:nth-child(odd) {
              @apply rotate-45;
            }

            &:nth-child(even) {
              @apply -rotate-45;
            }
          }
        }
      }
    }
  }
</style>
