---
import Link from '@/components/Link.astro';
import { getLanguageFromURL, translateBreadcrumbs } from '@/util';

const lang = getLanguageFromURL(Astro.url.pathname);

const paths: string[] = Astro.url.pathname.split('/').filter(Boolean);

const breadcrumbs = paths
    .map((_, i) => ({
      label: translateBreadcrumbs(
        lang,
        i === paths.length - 1 ? 'home' : paths[paths.length - i - 1],
      ).replace('-', ' '),
      href: `/${paths.slice(0, paths.length - i).join('/')}`,
    }))
    .reverse();

---

{breadcrumbs.length > 1 ? <ul class="breadcrumbs">
  {
    breadcrumbs?.map(({ label, href }) => (
      <li>
        <Link class="truncate" href={href} title={label} />
      </li>
    ))
  }
</ul> : <></>}

<style is:global>
  ul.breadcrumbs {
    @apply z-10
    absolute
    top-8
    left-4
    sm:left-8
    flex
    gap-4
    !p-0
    text-xs
    whitespace-nowrap
    overflow-x-auto;

    li {
      @apply relative
      !list-none
      capitalize;

      &:not(:is(:last-of-type)):before {
        content: '/\00a0';
        @apply absolute
        -right-4
        text-dracula-comment
        dark:!text-dracula-green;
      }
    }
  }
</style>
