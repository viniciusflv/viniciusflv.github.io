---
import { getCollection } from 'astro:content';

import Container from '@/components/Container.astro';
import Heading from '@/components/Heading.astro';
import Hero from '@/components/Hero.astro';
import Link from '@/components/Link.astro';
import MeRicknMorty from '@/components/MeRicknMorty.astro';
import PostPreview from '@/components/PostPreview.astro';
import Tag from '@/components/Tag.astro';
import Root from '@/layouts/Root.astro';
import { getLanguageFromURL, getTranslation } from '@/util';

const lang = getLanguageFromURL(Astro.url.pathname);

const files = await getCollection('posts', ({ slug }) => {
  return slug.startsWith(lang.toLocaleLowerCase());
});

const categories = files
  .filter(({ data }) => data.category)
  .map(({ data, slug }) => ({
    label: data.category,
    value: slug.replace('pt-br', 'pt-BR') ?? '',
  }));

const posts = files
  .filter(({ data }) => data.categories)
  .sort((a, b) => {
    const dateA = new Date(a.data.date).setHours(24);
    const dateB = new Date(b.data.date).setHours(24);

    return dateB - dateA;
  })
  .map(({ slug, ...rest }) => ({
    ...rest,
    slug: `/${slug.replace('pt-br', 'pt-BR')}`,
  }));

const props = {
  lang,
  title: getTranslation(lang, 'HOME_HERO_H1'),
  description: getTranslation(lang, 'HOME_HERO_H2'),
  keywords: categories.map(({ label }) => label.toLowerCase()).join(','),
  categories,
};
---

<Root {...props}>
  <Hero {...props}>
    <MeRicknMorty slot="image" {...props} />
    <div class="flex flex-wrap gap-4 w-full">
      <Link
        title={getTranslation(lang, 'HOME_HERO_BUTTON_PRIMARY')}
        href={`/${lang}/posts`}
        isButton
      />
      <Link
        title={getTranslation(lang, 'HOME_HERO_BUTTON_SECONDARY')}
        href={`/${lang}/about`}
        isButton
        isOutlined
      />
    </div>
  </Hero>
  <Container class="content">
    <main>
      <Heading as="h3">{getTranslation(lang, 'HOME_POSTS_TITLE')}</Heading>
      <div class="posts">
        {posts.map(({ data, slug }) => <PostPreview {...data} url={slug} />)}
      </div>
    </main>
    <aside>
      <Heading as="h3">{getTranslation(lang, 'HOME_CATEGORY_TITLE')}</Heading>
      <div class="categories">
        {
          categories?.map(({ label, value }) => (
            <Tag value={value} label={label} />
          ))
        }
      </div>
    </aside>
  </Container>
</Root>

<style>
  .content {
    @apply grid
    md:grid-cols-[1fr,auto]
    gap-8;

    main {
      @apply flex
      flex-col
      items-start
      gap-4;

      .posts {
        @apply grid
        w-full
        sm:grid-cols-auto-fit-[20rem]
        gap-8;
      }
    }

    aside {
      @apply flex
      flex-col
      items-start
      gap-4;

      .categories {
        @apply grid
        grid-cols-auto-fit-[6rem]
        md:min-w-52
        w-full
        gap-4;
      }
    }
  }
</style>
