---
import type { MarkdownLayoutProps } from "astro";
import { getCollection } from "astro:content";
import Page from "@/layouts/Page.astro";
import Hero from "@/components/Hero.astro";
import Container from "@/components/Container.astro";
import Card from "@/components/Card.astro";
import Link from "@/components/Link.astro";

import {
  KNOWN_LANGUAGES,
  TRANSLATIONS,
  type TranslationsOptions,
} from "@/consts";

import { getLanguageFromURL } from "@/util";
import Title from "@/components/Title.astro";
import MeRicknMorty from "@/components/MeRicknMorty.astro";

const lang = getLanguageFromURL(Astro.url.pathname);

function getRelativeLocaleUrl(href: string) {
  return `/${lang}${href}`;
}

function getTranslations(keys: TranslationsOptions) {
  return TRANSLATIONS?.[lang]?.[keys];
}

const files = await getCollection("posts", ({ slug }) => {
  return slug.startsWith(lang.toLocaleLowerCase());
});

const posts = files
  .filter(({ data }) => data.tag)
  .sort((a, b) => {
    const dateA = new Date(a?.data?.date || 0).setHours(24);
    const dateB = new Date(b?.data?.date || 0).setHours(24);

    return dateB - dateA;
  })
  .map((file) => {
    return {
      ...file,
      data: { ...file.data, icon: file.data.icon?.replace("@", "/src") },
    };
  })
  .slice(0, 6);

const categories = files
  .filter(({ data }) => data.categories)
  .map((file) => {
    return {
      label: file.data.categories,
      value: `/${file.slug.replace("pt-br", "pt-BR")}`,
    };
  });

const props = {
  ...Astro.props,
  ...Astro.props.frontmatter,
  lang,
  getRelativeLocaleUrl,
  getTranslations,
  knownLanguages: KNOWN_LANGUAGES,
};

export type Props = MarkdownLayoutProps<any> & {
  file: string;
};
---

<Page {...props}>
  <Hero {...props}>
    <MeRicknMorty slot="image" />
    <div class="flex flex-wrap justify-start items-start gap-4">
      <Link
        title={getTranslations("HOME_HERO_BUTTON_PRIMARY")}
        href={getRelativeLocaleUrl("/posts")}
        isButton
      />
      <Link
        title={getTranslations("HOME_HERO_BUTTON_SECONDARY")}
        href={getRelativeLocaleUrl("/about")}
        isOutlined
      />
    </div>
  </Hero>
  <Container class="home__highlights">
    <main>
      <Title as="h3">{getTranslations("HOME_POSTS_TITLE")}</Title>
      <div class="posts">
        {
          posts.map((post) => (
            <Card
              lang={lang}
              href={`/${post.slug.replace("pt-br", "pt-BR")}`}
              {...post.data}
            />
          ))
        }
      </div>
    </main>
    <aside>
      <Title as="h3">{getTranslations("HOME_CATEGORY_TITLE")}</Title>
      <div class="categories">
        {
          categories.map(({ label, value }) => (
            <Link title={label} href={value} isTag />
          ))
        }
      </div>
    </aside>
  </Container>
</Page>

<style>
  :global(.home__highlights) {
    @apply flex
    flex-col-reverse
    md:grid
    md:grid-cols-[4fr,1fr]
    gap-8;

    main,
    aside {
      @apply flex
      flex-col
      gap-16;
    }

    main {
      .posts {
        @apply grid
        sm:grid-cols-auto-fit-[18rem]
        gap-4;
      }
    }

    aside {
      .categories {
        @apply grid
        justify-center
        sm:justify-start
        grid-cols-auto-fit-[6rem]
        gap-4
        md:min-w-52;
      }
    }
  }
</style>
