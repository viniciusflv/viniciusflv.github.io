---
import type { MarkdownLayoutProps } from 'astro';
import { getCollection } from 'astro:content';

import Container from '@/components/Container.astro';
import Tag from '@/components/Tag.astro';
import Tree from '@/components/Tree.astro';
import Root from '@/layouts/Root.astro';
import { getLanguageFromURL, unflattenHeading } from '@/util';

const nestedHeadings = unflattenHeading(Astro.props.headings);
const lang = getLanguageFromURL(Astro.url.pathname);
const date = new Date(Astro.props.frontmatter.date).setHours(24);
const dateFormatter = new Intl.DateTimeFormat(lang);
const created = dateFormatter.format(date);

const files = await getCollection('posts', ({ slug }) => {
  return slug.startsWith(lang.toLocaleLowerCase());
});

const categories = files
  .filter(({ data }) => data.category === Astro.props.frontmatter.categories)
  .map(({ data, slug }) => ({
    label: data.category,
    value: `/${slug}`.replace('pt-br', 'pt-BR') ?? '',
  }));

export type Props = MarkdownLayoutProps<any>;
---

<Root {...Astro.props}>
  <Container class="post">
    <aside>
      <nav>
        <Tree nestedHeadings={nestedHeadings} />
      </nav>
    </aside>
    <article class="markdown">
      <header>
        <p>{created}</p>
        <a title="Vinícius Victorino" href={`/${lang}/about`}>
          Vinícius Victorino
        </a>
        <nav>
          {
            categories?.map(({ label, value }) => (
              <Tag value={value} label={label} />
            ))
          }
        </nav>
      </header>
      <slot />
    </article>
  </Container>
</Root>

<style>
  .post {
    @apply grid
    grid-cols-[minmax(0,1fr)]
    lg:grid-cols-[minmax(0,3.5fr)_minmax(250px,1fr)];

    &.contain {
      @apply pt-16 sm:pt-32;
    }

    article {
      order: -1;
      @apply flex flex-col gap-8;

      header {
        @apply flex flex-col items-start gap-2;

        nav {
          @apply flex flex-wrap gap-4;
        }
      }
    }

    aside {
      @apply relative
      hidden lg:flex
      max-w-64;

      nav {
        @apply sticky
        top-24
        px-4
        overflow-y-auto
        max-h-[80vh];
      }
    }
  }
</style>
