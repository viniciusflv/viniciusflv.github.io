---
import Card from '../components/Card.astro';
import Layout from './Layout.astro';

import { getLanguageFromURL } from '../util';

const { category } = Astro.props.frontmatter;
const lang = getLanguageFromURL(Astro.url.pathname);
const posts = await Astro.glob('../pages/**/posts/**/*.mdx');
const articles = posts
  .filter(({ url }) => (url ?? '').startsWith(`/${lang}`))
  .filter(({ frontmatter }) => frontmatter.categories)
  .filter(({ frontmatter }) =>
    category ? frontmatter.categories === category : frontmatter.categories,
  )
  .reduce<Record<string, any[]>>((acc, article) => {
    const key = article.frontmatter.categories;
    const category = acc[key] || [];
    return { ...acc, [key]: [...category, article] };
  }, {});
---

<Layout {...Astro.props}>
  <slot />
  <main class="main">
    <article class="article">
      <div class="flex flex-col gap-8">
        {
          Object.keys(articles).map((key) => {
            return (
              <div class="flex flex-col gap-8">
                <h2>{key}</h2>
                <div class="grid sm:grid-cols-2 lg:grid-cols-3 gap-8">
                  {articles[key].map(({ url, frontmatter }) => (
                    <Card lang={lang} url={url} {...frontmatter} />
                  ))}
                </div>
              </div>
            );
          })
        }
      </div>
    </article>
  </main>
</Layout>

<style>
  .main {
    @apply flex
    gap-8
    container
    mx-auto
    p-8
    py-16;
  }

  .article {
    @apply flex
    flex-col
    grow
    gap-8;
  }
</style>
