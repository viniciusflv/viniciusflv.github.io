---
import { getCollection } from 'astro:content';

import Card from '@/components/Card.astro';
import Container from '@/components/Container.astro';
import Heading from '@/components/Heading.astro';
import Hero from '@/components/Hero.astro';
import Root from '@/layouts/Root.astro';
import { getLanguageFromURL } from '@/util';

const { category } = Astro.props.frontmatter;

const lang = getLanguageFromURL(Astro.url.pathname);

const files = await getCollection(
  'posts',
  ({ slug, data }) =>
    slug.startsWith(lang.toLocaleLowerCase()) &&
    data.categories &&
    (category ? category === data.categories : data.categories),
);

const articles = files
  .map(({ slug, ...rest }) => ({
    ...rest,
    slug: slug.replace('pt-br', 'pt-BR'),
  }))
  .reduce<Record<string, any[]>>((acc, article) => {
    const key = article.data.categories;
    const category = acc[key] || [];
    return { ...acc, [key]: [...category, article] };
  }, {});

const subjects = Object.keys(articles).join(', ');

const props = {
  lang,
  ...Astro.props.content,
  description: `${Astro.props.content.description} ${subjects}.`,
};
---

<Root {...props}>
  <Hero {...props} />
  <Container>
    <main class="flex flex-col gap-16">
      {
        Object.keys(articles).map((key) => {
          return (
            <div class="flex flex-col gap-8">
              <Heading as="h3" isHighlighted>
                {key}
              </Heading>
              <div class="flex flex-wrap gap-8 justify-center md:justify-start w-full">
                {articles[key].map(({ data, ...article }) => (
                  <Card lang={lang} {...article} {...data} />
                ))}
              </div>
            </div>
          );
        })
      }
    </main>
  </Container>
</Root>
