---
const chart = Astro.props.chart;
---

<script src="https://cdn.jsdelivr.net/npm/mermaid/dist/mermaid.min.js"></script>

<script>
  const nodes = document.querySelectorAll('[data-mermaid]');
  Array.from(nodes).forEach((node) => {
    node.innerHTML = node.getAttribute('data-mermaid') || '';
    node.className = 'mermaid';
  });
</script>

{
  Astro.slots.default ? (
    <div class="grid xl:grid-cols-2 gap-8 items-start">
      <slot />
      <div data-mermaid={chart} />
    </div>
  ) : (
    <div data-mermaid={chart} />
  )
}

<style is:global>
  .mermaid {
    .edgePaths * {
      @apply dark:!stroke-dark-green;
    }

    .edgeLabel {
      @apply dark:!bg-dark-background;
    }

    .marker,
    marker * {
      @apply dark:!fill-dark-green;

      &.cross {
        @apply dark:!stroke-dark-green;
      }
    }

    #crosshead * {
      @apply dark:!stroke-dark-green;
    }

    line {
      @apply dark:!stroke-dark-green;

      &[id^='actor'] {
        @apply dark:!stroke-dark-cyan;
      }
    }

    .nodes a {
      &:hover {
        .node * {
          @apply dark:!stroke-dark-cyan !stroke-dark-red;
        }
      }
    }

    .node *,
    .actor {
      @apply dark:!fill-dark-background
      dark:!stroke-dark-currentLine;
    }

    .cluster * {
      @apply dark:!fill-dark-darkest
      dark:!stroke-dark-currentLine;
    }

    .actor *,
    .messageText {
      @apply dark:!fill-dark-cyan;
    }

    [class^='activation'] {
      @apply dark:!fill-dark-orange;
    }

    * {
      @apply dark:!text-dark-cyan;
    }
  }
</style>
